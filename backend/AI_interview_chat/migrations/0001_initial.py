# Generated by Django 5.2.4 on 2025-10-14 21:39

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ChatContext",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "context_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "project_title",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("chat_title", models.CharField(blank=True, max_length=500, null=True)),
                ("participants", models.JSONField(default=list)),
                ("messages", models.JSONField(default=list)),
                ("url", models.URLField(blank=True, null=True)),
                ("total_messages", models.IntegerField(default=0)),
                (
                    "client_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "project_type",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("key_topics", models.JSONField(default=list)),
                (
                    "extracted_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "ai_interview_chat_context",
                "ordering": ["-extracted_at"],
            },
        ),
        migrations.CreateModel(
            name="InterviewQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "question_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("question_text", models.TextField()),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("technical", "Technical"),
                            ("behavioral", "Behavioral"),
                            ("experience", "Experience"),
                            ("project", "Project-specific"),
                            ("skill", "Skill-based"),
                            ("scenario", "Scenario-based"),
                        ],
                        max_length=50,
                    ),
                ),
                ("based_on_message", models.IntegerField(blank=True, null=True)),
                ("related_topics", models.JSONField(default=list)),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("easy", "Easy"),
                            ("medium", "Medium"),
                            ("hard", "Hard"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "generated_by_model",
                    models.CharField(default="gpt2", max_length=100),
                ),
                ("generation_confidence", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("asked_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "ai_interview_question",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="AIModelConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "config_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("model_name", models.CharField(max_length=100)),
                (
                    "model_type",
                    models.CharField(
                        choices=[
                            ("question_generator", "Question Generator"),
                            ("response_analyzer", "Response Analyzer"),
                            ("follow_up_generator", "Follow-up Generator"),
                            ("topic_extractor", "Topic Extractor"),
                        ],
                        max_length=50,
                    ),
                ),
                ("model_path", models.CharField(max_length=500)),
                ("max_length", models.IntegerField(default=512)),
                ("temperature", models.FloatField(default=0.7)),
                ("top_p", models.FloatField(default=0.9)),
                ("do_sample", models.BooleanField(default=True)),
                ("use_cpu", models.BooleanField(default=True)),
                ("batch_size", models.IntegerField(default=1)),
                ("cache_size", models.IntegerField(default=100)),
                ("is_active", models.BooleanField(default=True)),
                ("is_loaded", models.BooleanField(default=False)),
                ("load_time_seconds", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_used", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "ai_model_config",
                "unique_together": {("model_name", "model_type")},
            },
        ),
        migrations.CreateModel(
            name="InterviewResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "response_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("response_text", models.TextField(blank=True, null=True)),
                ("response_time_seconds", models.FloatField(default=0.0)),
                ("ai_analysis", models.JSONField(default=dict)),
                ("sentiment_score", models.FloatField(default=0.0)),
                ("relevance_score", models.FloatField(default=0.0)),
                ("technical_accuracy", models.FloatField(default=0.0)),
                ("follow_up_question", models.TextField(blank=True, null=True)),
                (
                    "follow_up_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("clarification", "Clarification"),
                            ("deeper", "Deeper Dive"),
                            ("related", "Related Topic"),
                            ("challenge", "Challenge"),
                            ("scenario", "Scenario Extension"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("needs_follow_up", models.BooleanField(default=False)),
                ("is_satisfactory", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("analyzed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "question",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="response",
                        to="AI_interview_chat.interviewquestion",
                    ),
                ),
            ],
            options={
                "db_table": "ai_interview_response",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="InterviewSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "session_name",
                    models.CharField(default="AI Interview Session", max_length=200),
                ),
                (
                    "interviewer_name",
                    models.CharField(default="AI Interviewer", max_length=100),
                ),
                (
                    "candidate_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "interview_type",
                    models.CharField(
                        choices=[
                            ("general", "General Interview"),
                            ("technical", "Technical Interview"),
                            ("behavioral", "Behavioral Interview"),
                            ("project_specific", "Project-Specific Interview"),
                        ],
                        default="general",
                        max_length=50,
                    ),
                ),
                (
                    "difficulty_level",
                    models.CharField(
                        choices=[
                            ("easy", "Easy"),
                            ("medium", "Medium"),
                            ("hard", "Hard"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("paused", "Paused"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("total_questions", models.IntegerField(default=0)),
                ("total_responses", models.IntegerField(default=0)),
                ("average_response_time", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "chat_context",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interview_sessions",
                        to="AI_interview_chat.chatcontext",
                    ),
                ),
            ],
            options={
                "db_table": "ai_interview_session",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="interviewquestion",
            name="session",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="questions",
                to="AI_interview_chat.interviewsession",
            ),
        ),
    ]
